today
today <- Sys.Date()
format(today, format="%B %d %Y" "%m" "%s" "%h")
today <- Sys.Date()
format(today, format="%B %d %Y %m %s %h")
today
today <- Sys.Date()
format(today, format="%B %d %Y")
today <- paste("Rexport/",today)
dir.create("Rexport/today")
today <- Sys.Date()
format(today, format="%B %d %Y")
today <- paste("Rexport/",today)
dir.create(today)
today <- Sys.Date()
format(today, format="%B %d %Y") # Format
today <- paste("Rexport/",today) # Form path and new folder name of today's date
if !dir.exists(today) {
dir.create(today) # Create today's folder
}
today <- Sys.Date()
format(today, format="%B %d %Y") # Format
today <- paste("Rexport/",today) # Form path and new folder name of today's date
if (!dir.exists(today)) {
dir.create(today) # Create today's folder
}
### Subset the data of the current SEID
data2 <- subset(data,data$SEID == SEID[i])
PpkImage = paste(today,"/",SEID[i],"_Ppk.png")
# Create the image of Ppk plot of this SEID, set the width and height
png(PpkImage, width = 1085, height = 804)
## Ppk plot
dotchart(data2$Ppk,labels = data2$Test.No,cex = 0.7,col = c("black","darksalmon","darkslateblue","forestgreen","deepskyblue2"),main = "Dotplot of SEID 12493 Ppk")
#Add a Ppk 1.5 line
abline(v = 1.5,col = 3,lty = 2)
# Add text Ppk - 1.5 to denote the line
text(1,3, "Ppk = 1.5", col = "blue", adj = c(-.1, -.1))
#Save the image
dev.off()
today <- Sys.Date()
format(today, format="%B %d %Y") # Format
today
paste("/",today)
class(today)
as.character(today)
today <- as.character(today)
today <- paste("Rexport/",today) # Form path and new folder name of today's date
today
trim(today)
strtrim(today)
strtrim(today,10)
today <- Sys.Date()
format(today, format="%B %d %Y") # Format
today <- paste("Rexport/",today) # Form path and new folder name of today's date
if (!dir.exists(today) {
dir.create(today) # Create today's folder
}
PpkImage = paste(today,SEID[i],"_Ppk.png")
png(PpkImage, width = 1085, height = 804)
## Ppk plot
dotchart(data2$Ppk,labels = data2$Test.No,cex = 0.7,col = c("black","darksalmon","darkslateblue","forestgreen","deepskyblue2"),main = "Dotplot of SEID 12493 Ppk")
#Add a Ppk 1.5 line
abline(v = 1.5,col = 3,lty = 2)
# Add text Ppk - 1.5 to denote the line
text(1,3, "Ppk = 1.5", col = "blue", adj = c(-.1, -.1))
#Save the image
dev.off()
PpkImage = paste(today,"/",SEID[i],"_Ppk.png")
png(PpkImage, width = 1085, height = 804)
# Get today's date
today <- Sys.Date()
format(today, format="%B %d %Y") # Format
today <- paste("Rexport/",today) # Form path and new folder name of today's date
if (!dir.exists(today) {
dir.create(today,mode = "0777") # Create today's folder
}
today <- paste("Rexport/",today,sep=“”)
today <- paste0("Rexport/",today)
todaay
today
today <- Sys.Date()
format(today, format="%B %d %Y") # Format
today <- paste0("Rexport/",today) # Form path and new folder name of today's date
if (!dir.exists(today) {
dir.create(today) # Create today's folder
}
today <- Sys.Date()
format(today, format="%B %d %Y") # Format
today <- paste0("Rexport/",today) # Form path and new folder name of today's date
if (!dir.exists(today) {
dir.create(today) # Create today's folder
}
### Subset the data of the current SEID
data2 <- subset(data,data$SEID == SEID[i])
PpkImage = paste0(today,SEID[i],"_Ppk.png")
# Create the image of Ppk plot of this SEID, set the width and height
png(PpkImage, width = 1085, height = 804)
### Subset the data of the current SEID
data2 <- subset(data,data$SEID == SEID[i])
PpkImage = paste0(today,"/",SEID[i],"_Ppk.png")
PpkImage = paste0(today,"//",SEID[i],"_Ppk.png")
PpkImage = paste0(today,"\",SEID[i],"_Ppk.png")
## Ppk plot
dotchart(data2$Ppk,labels = data2$Test.No,cex = 0.7,col = c("black","darksalmon","darkslateblue","forestgreen","deepskyblue2"),main = "Dotplot of SEID 12493 Ppk")
#Add a Ppk 1.5 line
abline(v = 1.5,col = 3,lty = 2)
# Add text Ppk - 1.5 to denote the line
text(1,3, "Ppk = 1.5", col = "blue", adj = c(-.1, -.1))
#Save the image
dev.off()
PpkImage = paste0(SEID[i],"_Ppk.png")
# Create the image of Ppk plot of this SEID, set the width and height
png(PpkImage, width = 1085, height = 804)
## Ppk plot
dotchart(data2$Ppk,labels = data2$Test.No,cex = 0.7,col = c("black","darksalmon","darkslateblue","forestgreen","deepskyblue2"),main = "Dotplot of SEID 12493 Ppk")
#Add a Ppk 1.5 line
abline(v = 1.5,col = 3,lty = 2)
# Add text Ppk - 1.5 to denote the line
text(1,3, "Ppk = 1.5", col = "blue", adj = c(-.1, -.1))
#Save the image
dev.off()
PpkImage = paste0("Rexport/",SEID[i],"_Ppk.png")
# Create the image of Ppk plot of this SEID, set the width and height
png(PpkImage, width = 1085, height = 804)
## Ppk plot
dotchart(data2$Ppk,labels = data2$Test.No,cex = 0.7,col = c("black","darksalmon","darkslateblue","forestgreen","deepskyblue2"),main = "Dotplot of SEID 12493 Ppk")
#Add a Ppk 1.5 line
abline(v = 1.5,col = 3,lty = 2)
# Add text Ppk - 1.5 to denote the line
text(1,3, "Ppk = 1.5", col = "blue", adj = c(-.1, -.1))
#Save the image
dev.off()
PpkImage = paste0("Rexport/","SEID",SEID[i],"_Ppk.png")
# Create the image of Ppk plot of this SEID, set the width and height
png(PpkImage, width = 1085, height = 804)
## Ppk plot
dotchart(data2$Ppk,labels = data2$Test.No,cex = 0.7,col = c("black","darksalmon","darkslateblue","forestgreen","deepskyblue2"),main = "Dotplot of SEID 12493 Ppk")
#Add a Ppk 1.5 line
abline(v = 1.5,col = 3,lty = 2)
# Add text Ppk - 1.5 to denote the line
text(1,3, "Ppk = 1.5", col = "blue", adj = c(-.1, -.1))
#Save the image
dev.off()
SummaryImage = paste0("Rexport/","SEID",SEID[i],"_summary.png")
# Create the image of Ppk plot of this SEID, set the width and height
png(SummaryImage, width = 1085, height = 804)
## Summary plot of min,max,mean,threshold
plot(data2$Max,data2$Test.No,cex = 0.7,col = "blue",yaxt = 'n',ann = FALSE,pch = 0,xlim = c(1,1000),log = "x")
points(data2$Min,data2$Test.No,cex = 0.7,col = "forestgreen",yaxt = 'n',ann = FALSE,pch =2 )
points(data2$Mean,data2$Test.No,cex = 0.7,col = "darksalmon",yaxt = 'n',ann = FALSE,pch = 4)
grid(NA,94)
axis(2,at = data2$Test.No,labels = data2$Test.No,las = 2,cex.axis = 0.6)
abline(v = threshold[i],col ="red", lty =2)
text(400,3, "Threshold = 1000", col = "red", adj = c(-.1, -.1))
title(main = "Dotplot of SEID 12493 MEAN,MAX,MIN",xlab = "Logarithm of original values")
legend(150,90,c("Max","Min","Mean"),pch=c(0,2,4),col = c("blue","forestgreen","darksalmon"))
lines(data2$Max,data2$Test.No,lty = 2, col ="blue")
lines(data2$Min,data2$Test.No,lty = 2, col ="forestgreen")
lines(data2$Mean,data2$Test.No,lty = 2, col ="darksalmon")
#Save the image
dev.off()
SummaryImage = paste0("Rexport/","SEID",SEID[i],"_summary.png")
# Create the image of Ppk plot of this SEID, set the width and height
png(SummaryImage, width = 1085, height = 804)
## Summary plot of min,max,mean,threshold
plot(data2$Max,data2$Test.No,cex = 0.7,col = "blue",yaxt = 'n',ann = FALSE,pch = 0,xlim = c(1,theshold[i]),log = "x")
points(data2$Min,data2$Test.No,cex = 0.7,col = "forestgreen",yaxt = 'n',ann = FALSE,pch =2 )
points(data2$Mean,data2$Test.No,cex = 0.7,col = "darksalmon",yaxt = 'n',ann = FALSE,pch = 4)
grid(NA,94)
axis(2,at = data2$Test.No,labels = data2$Test.No,las = 2,cex.axis = 0.6)
abline(v = threshold[i],col ="red", lty =2)
text(400,3, "Threshold = 1000", col = "red", adj = c(-.1, -.1))
title = paste0("Summary plot of SEID",SEID[i],"MEAN,MAX,MIN")
title(main = title,xlab = "Logarithm of original values")
legend("right",c("Max","Min","Mean"),pch=c(0,2,4),col = c("blue","forestgreen","darksalmon"))
lines(data2$Max,data2$Test.No,lty = 2, col ="blue")
lines(data2$Min,data2$Test.No,lty = 2, col ="forestgreen")
lines(data2$Mean,data2$Test.No,lty = 2, col ="darksalmon")
#Save the image
dev.off()
SummaryImage = paste0("Rexport/","SEID",SEID[i],"_summary.png")
# Create the image of Ppk plot of this SEID, set the width and height
png(SummaryImage, width = 1085, height = 804)
## Summary plot of min,max,mean,threshold
plot(data2$Max,data2$Test.No,cex = 0.7,col = "blue",yaxt = 'n',ann = FALSE,pch = 0,xlim = c(1,theshold[i]),log = "x")
points(data2$Min,data2$Test.No,cex = 0.7,col = "forestgreen",yaxt = 'n',ann = FALSE,pch =2 )
points(data2$Mean,data2$Test.No,cex = 0.7,col = "darksalmon",yaxt = 'n',ann = FALSE,pch = 4)
grid(NA,94)
axis(2,at = data2$Test.No,labels = data2$Test.No,las = 2,cex.axis = 0.6)
abline(v = threshold[i],col ="red", lty =2)
text(400,3, "Threshold = 1000", col = "red", adj = c(-.1, -.1))
title = paste0("Summary plot of SEID",SEID[i],"MEAN,MAX,MIN")
title(main = title,xlab = "Logarithm of original values")
legend("right",c("Max","Min","Mean"),pch=c(0,2,4),col = c("blue","forestgreen","darksalmon"))
lines(data2$Max,data2$Test.No,lty = 2, col ="blue")
lines(data2$Min,data2$Test.No,lty = 2, col ="forestgreen")
lines(data2$Mean,data2$Test.No,lty = 2, col ="darksalmon")
Threshold = c(0,1000,-5,-30,1500,1125,2125)
## Summary plot of min,max,mean,threshold
plot(data2$Max,data2$Test.No,cex = 0.7,col = "blue",yaxt = 'n',ann = FALSE,pch = 0,xlim = c(1,Threshold[i]),log = "x")
points(data2$Min,data2$Test.No,cex = 0.7,col = "forestgreen",yaxt = 'n',ann = FALSE,pch =2 )
points(data2$Mean,data2$Test.No,cex = 0.7,col = "darksalmon",yaxt = 'n',ann = FALSE,pch = 4)
grid(NA,94)
axis(2,at = data2$Test.No,labels = data2$Test.No,las = 2,cex.axis = 0.6)
abline(v = Threshold[i],col ="red", lty =2)
text(400,3, "Threshold = 1000", col = "red", adj = c(-.1, -.1))
title = paste0("Summary plot of SEID",SEID[i],"MEAN,MAX,MIN")
title(main = title,xlab = "Logarithm of original values")
legend("right",c("Max","Min","Mean"),pch=c(0,2,4),col = c("blue","forestgreen","darksalmon"))
lines(data2$Max,data2$Test.No,lty = 2, col ="blue")
lines(data2$Min,data2$Test.No,lty = 2, col ="forestgreen")
lines(data2$Mean,data2$Test.No,lty = 2, col ="darksalmon")
#Save the image
dev.off()
SummaryImage = paste0("Rexport/","SEID",SEID[i],"_summary.png")
# Create the image of Ppk plot of this SEID, set the width and height
png(SummaryImage, width = 1085, height = 804)
## Summary plot of min,max,mean,threshold
plot(data2$Max,data2$Test.No,cex = 0.7,col = "blue",yaxt = 'n',ann = FALSE,pch = 0,xlim = c(1,Threshold[i]))
points(data2$Min,data2$Test.No,cex = 0.7,col = "forestgreen",yaxt = 'n',ann = FALSE,pch =2 )
points(data2$Mean,data2$Test.No,cex = 0.7,col = "darksalmon",yaxt = 'n',ann = FALSE,pch = 4)
grid(NA,94)
axis(2,at = data2$Test.No,labels = data2$Test.No,las = 2,cex.axis = 0.6)
abline(v = Threshold[i],col ="red", lty =2)
text(400,3, "Threshold = 1000", col = "red", adj = c(-.1, -.1))
title = paste0("Summary plot of SEID",SEID[i],"MEAN,MAX,MIN")
title(main = title,xlab = "Logarithm of original values")
legend("right",c("Max","Min","Mean"),pch=c(0,2,4),col = c("blue","forestgreen","darksalmon"))
lines(data2$Max,data2$Test.No,lty = 2, col ="blue")
lines(data2$Min,data2$Test.No,lty = 2, col ="forestgreen")
lines(data2$Mean,data2$Test.No,lty = 2, col ="darksalmon")
#Save the image
dev.off()
SummaryImage = paste0("Rexport/","SEID",SEID[i],"_summary.png")
# Create the image of Ppk plot of this SEID, set the width and height
png(SummaryImage, width = 1085, height = 804)
## Summary plot of min,max,mean,threshold
plot(data2$Max,data2$Test.No,cex = 0.7,col = "blue",yaxt = 'n',ann = FALSE,pch = 0,xlim = c(1,Threshold[i]))
points(data2$Min,data2$Test.No,cex = 0.7,col = "forestgreen",yaxt = 'n',ann = FALSE,pch =2 )
points(data2$Mean,data2$Test.No,cex = 0.7,col = "darksalmon",yaxt = 'n',ann = FALSE,pch = 4)
grid(NA,94)
axis(2,at = data2$Test.No,labels = data2$Test.No,las = 2,cex.axis = 0.6)
abline(v = Threshold[i],col ="red", lty =2)
text(right, "Threshold = 1000", col = "red", adj = c(-.1, -.1))
title = paste0("Summary plot of SEID",SEID[i],"MEAN,MAX,MIN")
title(main = title,xlab = "Logarithm of original values")
legend("right",c("Max","Min","Mean"),pch=c(0,2,4),col = c("blue","forestgreen","darksalmon"))
lines(data2$Max,data2$Test.No,lty = 2, col ="blue")
lines(data2$Min,data2$Test.No,lty = 2, col ="forestgreen")
lines(data2$Mean,data2$Test.No,lty = 2, col ="darksalmon")
#Save the image
dev.off()
source('~/AcadiaDOE.R')
source('~/AcadiaDOE.R')
source('~/.active-rstudio-document')
source('~/AcadiaDOE.R')
SummaryImage2 = paste0("Rexport/","SEID",SEID[i],"_summary2.png")
# Create the image of Ppk plot of this SEID, set the width and height
png(SummaryImage2, width = 1085, height = 804)
## Summary plot of min,max,mean,threshold
plot(data2$Test.No,data2$Max,cex = 0.7,col = "blue",yaxt = 'n',ann = FALSE,pch = 0,xlim = c(1,Threshold[i]))
points(data2$Test.No,data2$Min,cex = 0.7,col = "forestgreen",yaxt = 'n',ann = FALSE,pch =2 )
points(data2$Test.No,data2$Mean,cex = 0.7,col = "darksalmon",yaxt = 'n',ann = FALSE,pch = 4)
grid(94,NA)
axis(1,at = data2$Test.No,labels = data2$Test.No,las = 2,cex.axis = 0.6)
abline(h = Threshold[i],col ="red", lty =2)
text("right", "Threshold = 1000", col = "red", adj = c(-.1, -.1))
title = paste0("Summary plot of SEID",SEID[i]," MEAN,MAX,MIN")
title(main = title)
legend("right",c("Max","Min","Mean"),pch=c(0,2,4),col = c("blue","forestgreen","darksalmon"))
lines(data2$Max,data2$Test.No,lty = 2, col ="blue")
lines(data2$Min,data2$Test.No,lty = 2, col ="forestgreen")
lines(data2$Mean,data2$Test.No,lty = 2, col ="darksalmon")
#Save the image
dev.off()
SummaryImage2 = paste0("Rexport/","SEID",SEID[i],"_summary2.png")
# Create the image of Ppk plot of this SEID, set the width and height
png(SummaryImage2, width = 1085, height = 804)
## Summary plot of min,max,mean,threshold
plot(data2$Max,cex = 0.7,col = "blue",yaxt = 'n',ann = FALSE,pch = 0,xlim = c(1,Threshold[i]))
points(data2$Min,cex = 0.7,col = "forestgreen",yaxt = 'n',ann = FALSE,pch =2 )
points(data2$Mean,cex = 0.7,col = "darksalmon",yaxt = 'n',ann = FALSE,pch = 4)
grid(94,NA)
axis(1,at = data2$Test.No,labels = data2$Test.No,las = 2,cex.axis = 0.6)
abline(h = Threshold[i],col ="red", lty =2)
text("right", "Threshold = 1000", col = "red", adj = c(-.1, -.1))
title = paste0("Summary plot of SEID",SEID[i]," MEAN,MAX,MIN")
title(main = title)
legend("right",c("Max","Min","Mean"),pch=c(0,2,4),col = c("blue","forestgreen","darksalmon"))
lines(data2$Max,data2$Test.No,lty = 2, col ="blue")
lines(data2$Min,data2$Test.No,lty = 2, col ="forestgreen")
lines(data2$Mean,data2$Test.No,lty = 2, col ="darksalmon")
#Save the image
dev.off()
SummaryImage2 = paste0("Rexport/","SEID",SEID[i],"_summary2.png")
# Create the image of Ppk plot of this SEID, set the width and height
png(SummaryImage2, width = 1085, height = 804)
## Summary plot of min,max,mean,threshold
plot(data2$Max,cex = 0.7,col = "blue",yaxt = 'n',ann = FALSE,pch = 0,xlim = c(1,93))
points(data2$Min,cex = 0.7,col = "forestgreen",yaxt = 'n',ann = FALSE,pch =2 )
points(data2$Mean,cex = 0.7,col = "darksalmon",yaxt = 'n',ann = FALSE,pch = 4)
grid(94,NA)
axis(1,at = data2$Test.No,labels = data2$Test.No,las = 2,cex.axis = 0.6)
abline(h = Threshold[i],col ="red", lty =2)
text("right", "Threshold = 1000", col = "red", adj = c(-.1, -.1))
title = paste0("Summary plot of SEID",SEID[i]," MEAN,MAX,MIN")
title(main = title)
legend("right",c("Max","Min","Mean"),pch=c(0,2,4),col = c("blue","forestgreen","darksalmon"))
lines(data2$Max,data2$Test.No,lty = 2, col ="blue")
lines(data2$Min,data2$Test.No,lty = 2, col ="forestgreen")
lines(data2$Mean,data2$Test.No,lty = 2, col ="darksalmon")
#Save the image
dev.off()
SummaryImage2 = paste0("Rexport/","SEID",SEID[i],"_summary2.png")
# Create the image of Ppk plot of this SEID, set the width and height
png(SummaryImage2, width = 1085, height = 804)
## Summary plot of min,max,mean,threshold
plot(data2$Max,cex = 0.7,col = "blue",xaxt = 'n',ann = FALSE,pch = 0,xlim = c(1,93))
points(data2$Min,cex = 0.7,col = "forestgreen",yaxt = 'n',ann = FALSE,pch =2 )
points(data2$Mean,cex = 0.7,col = "darksalmon",yaxt = 'n',ann = FALSE,pch = 4)
grid(94,NA)
axis(1,at = data2$Test.No,labels = data2$Test.No,las = 2,cex.axis = 0.6)
abline(h = Threshold[i],col ="red", lty =2)
text("right", "Threshold = 1000", col = "red", adj = c(-.1, -.1))
title = paste0("Summary plot of SEID",SEID[i]," MEAN,MAX,MIN")
title(main = title)
legend("right",c("Max","Min","Mean"),pch=c(0,2,4),col = c("blue","forestgreen","darksalmon"))
lines(data2$Test.No,data2$Max,lty = 2, col ="blue")
lines(data2$Test.No,data2$Min,lty = 2, col ="forestgreen")
lines(data2$Test.No,data2$Mean,lty = 2, col ="darksalmon")
#Save the image
dev.off()
SummaryImage2 = paste0("Rexport/","SEID",SEID[i],"_summary2.png")
# Create the image of Ppk plot of this SEID, set the width and height
png(SummaryImage2, width = 1085, height = 804)
## Summary plot of min,max,mean,threshold
plot(data2$Max,cex = 0.7,col = "blue",xaxt = 'n',ann = FALSE,pch = 0,xlim = c(1,93))
points(data2$Min,cex = 0.7,col = "forestgreen",yaxt = 'n',ann = FALSE,pch =2 )
points(data2$Mean,cex = 0.7,col = "darksalmon",yaxt = 'n',ann = FALSE,pch = 4)
grid(94,NA)
axis(1,at = data2$Test.No,labels = data2$Test.No,las = 2,cex.axis = 0.6)
abline(h = Threshold[i],col ="red", lty =2)
text("right", "Threshold = 1000", col = "red", adj = c(-.1, -.1))
title = paste0("Summary plot of SEID",SEID[i]," MEAN,MAX,MIN")
title(main = title)
legend("right",c("Max","Min","Mean"),pch=c(0,2,4),col = c("blue","forestgreen","darksalmon"))
#lines(data2$Test.No,data2$Max,lty = 2, col ="blue")
#lines(data2$Test.No,data2$Min,lty = 2, col ="forestgreen")
#lines(data2$Test.No,data2$Mean,lty = 2, col ="darksalmon")
#Save the image
dev.off()
legend("rightop",c("Max","Min","Mean"),pch=c(0,2,4),col = c("blue","forestgreen","darksalmon"))
legend("topright",c("Max","Min","Mean"),pch=c(0,2,4),col = c("blue","forestgreen","darksalmon"))
legend("top",c("Max","Min","Mean"),pch=c(0,2,4),col = c("blue","forestgreen","darksalmon"))
SummaryImage2 = paste0("Rexport/","SEID",SEID[i],"_summary2.png")
# Create the image of Ppk plot of this SEID, set the width and height
png(SummaryImage2, width = 1085, height = 804)
## Summary plot of min,max,mean,threshold
plot(data2$Max,cex = 0.7,col = "blue",xaxt = 'n',ann = FALSE,pch = 0,xlim = c(1,93))
points(data2$Min,cex = 0.7,col = "forestgreen",yaxt = 'n',ann = FALSE,pch =2 )
points(data2$Mean,cex = 0.7,col = "darksalmon",yaxt = 'n',ann = FALSE,pch = 4)
grid(94,NA)
axis(1,at = data2$Test.No,labels = data2$Test.No,las = 2,cex.axis = 0.6)
abline(h = Threshold[i],col ="red", lty =2)
text("right", "Threshold = 1000", col = "red", adj = c(-.1, -.1))
title = paste0("Summary plot of SEID",SEID[i]," MEAN,MAX,MIN")
title(main = title)
legend("top",c("Max","Min","Mean"),pch=c(0,2,4),col = c("blue","forestgreen","darksalmon"))
#lines(data2$Test.No,data2$Max,lty = 2, col ="blue")
#lines(data2$Test.No,data2$Min,lty = 2, col ="forestgreen")
#lines(data2$Test.No,data2$Mean,lty = 2, col ="darksalmon")
#Save the image
dev.off()
## Summary plot of min,max,mean,threshold
plot(data2$Max,cex = 0.7,col = "blue",xaxt = 'n',ann = FALSE,pch = 0,xlim = c(1,93))
points(data2$Min,cex = 0.7,col = "forestgreen",yaxt = 'n',ann = FALSE,pch =2 )
points(data2$Mean,cex = 0.7,col = "darksalmon",yaxt = 'n',ann = FALSE,pch = 4)
grid(94,NA)
axis(1,at = data2$Test.No,labels = data2$Test.No,las = 2,cex.axis = 0.6)
abline(h = Threshold[i],col ="red", lty =2)
text("right", "Threshold = 1000", col = "red", adj = c(-.1, -.1))
title = paste0("Summary plot of SEID",SEID[i]," MEAN,MAX,MIN")
title(main = title)
legend("top",c("Max","Min","Mean"),pch=c(0,2,4),col = c("blue","forestgreen","darksalmon"))
plot(data2$Max,cex = 0.7,col = "blue",xaxt = 'n',ann = FALSE,pch = 0,xlim = c(1,93))
points(data2$Min,cex = 0.7,col = "forestgreen",yaxt = 'n',ann = FALSE,pch =2 )
points(data2$Mean,cex = 0.7,col = "darksalmon",yaxt = 'n',ann = FALSE,pch = 4)
grid(94,NA)
axis(1,at = data2$Test.No,labels = data2$Test.No,las = 2,cex.axis = 0.6)
abline(h = Threshold[i],col ="red", lty =2)
text("right", "Threshold = 1000", col = "red", adj = c(-.1, -.1))
title = paste0("Summary plot of SEID",SEID[i]," MEAN,MAX,MIN")
title(main = title)
legend("top",c("Max","Min","Mean"),pch=c(0,2,4),col = c("blue","forestgreen","darksalmon"))
source('~/AcadiaDOE.R')
source('~/.active-rstudio-document')
min(data2$Min)
min(data2$Min,is.na=true)
min(data2$Min,is.NA=true)
min(data2$Min,na.rm=true)
min(data2$Min,na.rm=TRUE)
source('~/AcadiaDOE.R')
data = read.table('caltest.txt',header = TRUE)
lines(data.SqlOrg)
lines(data$SqlOrg)
lines(c(1:26),data$SqlOrg)
plot(data$SqlOrg)
lines(data$SqlOrg)
lines(data$TotalTbl)
dots(data$TotalTbl)
dot(data$TotalTbl)
plot(data$TotalTbl)
plot(data$TotTbl)
lines(data$TotTbl)
lines(data$SqlOrg)
Plot(data$TotOrg,col = 'r')
plot(data$TotOrg,col = 'r')
plot(data$TotOrg,col = 'red')
lines(data$TotOrg,col = 'r')
lines(data$TotOrg,col = 'red')
lines(data$TotTbl,col = 'blue',lty = 2)
lines(data$TotImp,col = 'green',lty = 2)
source('~/caltest.R')
source('~/caltest.R')
source('~/caltest.R')
source('~/caltest.R')
source('~/caltest.R')
source('~/caltest.R')
source('~/caltest.R')
source('~/caltest.R')
source('~/caltest.R')
source('~/caltest.R')
source('~/caltest.R')
source('~/caltest.R')
source('~/caltest.R')
source('~/caltest.R')
source('~/caltest.R')
source('~/caltest.R')
source('~/caltest.R')
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
source('~/Shiny-dev/app.R')
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
a = [1,2]
a = c(1,2)
a.length
length(a)
source('~/Shiny-dev/app.R')
shinyApp(ui = ui, server = server)
conn
conn <- odbcConnect("CapabilityDev")
setwd("~/Dingchao/Courses/R/R Programming/Assignments")
