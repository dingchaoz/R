shiny::runApp('Dingchao/Courses/R/Shiny/Dashboard')
shiny::runApp('Dingchao/Courses/R/Shiny/Dashboard')
shiny::runApp('Dingchao/Courses/R/Shiny/Dashboard')
shiny::runApp('Dingchao/Courses/R/Shiny/Dashboard')
shiny::runApp()
shiny::runApp('Dingchao/Courses/R/Shiny/Dashboard')
shiny::runApp('Dingchao/Courses/R/Shiny/Test')
install.packages("plotly")
shiny::runApp('Dingchao/Courses/R/Shiny/Test')
install.packages("ggplot2")
install.packages("ggplot2")
shiny::runApp('Dingchao/Courses/R/Shiny/Test')
shiny::runApp('Dingchao/Courses/R/Shiny/Test')
sqlQuery(conn, paste0("select Value from tblCals1 where Family = 'Default'and CalVersion = 32170017 and Threshold LIKE '",
USL, "%'"))
sqlQuery(conn, paste0("select Value from tblCals1 where Family = 'Default'and CalVersion = 32170017 and Threshold LIKE '",
USL, "%'"))
conn
shiny::runApp('Dingchao/Courses/R/Shiny/Test')
sqlQuery(conn, paste0("select Value from tblCals1 where Family = 'Default'and CalVersion = 32170017 and Threshold LIKE '",
USL, "%'"))
conn
shiny::runApp('Dingchao/Courses/R/Shiny/Test')
e
USL_Value$Value
shiny::runApp('Dingchao/Courses/R/Shiny/Test')
shiny::runApp('Dingchao/Courses/R/Shiny/Test')
shiny::runApp('Dingchao/Courses/R/Shiny/Test')
shiny::runApp('Dingchao/Courses/R/Shiny/Test')
conn
paste("select * from", PrgMap$Database[[which(PrgMap$Programs ==
input$Program)]], ".dbo. tblProcessingInfo")
sqlQuery(conn, paste("select * from", PrgMap$Database[[which(PrgMap$Programs ==
input$Program)]], ".dbo. tblProcessingInfo"))
DiagList <- sqlQuery(conn, paste("select * from", PrgMap$Database[[which(PrgMap$Programs ==
input$Program)]], ".dbo. tblProcessingInfo"))
trucks <- sqlQuery(conn, paste("select * from", PrgMap$Database[[which(PrgMap$Programs ==
input$Program)]], ".dbo. tblTrucks"))
paste0("select Value from tblCals1 where Family = 'Default'and CalVersion = 32170017 and Threshold LIKE '",USL,"%'")
paste0("select Value from",PrgMap$Database[[which(PrgMap$Programs ==
input$Program)]],".dbo.tblCal1 where Family = 'Default'and CalVersion = 32170017 and Threshold LIKE '",USL,"%'")")
shiny::runApp('Dingchao/Courses/R/Shiny/Test')
setwd("~/Dingchao/Courses/R/R Programming/Assignments")
source('~/Dingchao/Courses/R/R Programming/Assignments/testForPlotly.R')
library(plotly)
source('~/Dingchao/Courses/R/R Programming/Assignments/testForPlotly.R')
h <- plot_ly(data = diamonds,type = "box",boxpoints = "all", jitter = 0.1, pointpos = 0, x = price, y = cut,color = cut,orientation ='h' )
add_trace(x = rep(20000,length(seq(0,1,by=0.3))), y = seq(from = 0, to = 1, by = 0.3), mode = "lines", yaxis = "y2", marker = list(color = "red"),line = list(width = "1px"))
layout(yaxis2 = list(overlaying = "y",range = c(0, 1),side = "right",showticklabels = F))
View(IUPRQuery)
packageVersion("plotly")
install.packages("plotly")
install.packages("plotly")
library(plotly)
source('~/Dingchao/Courses/R/R Programming/Assignments/testForPlotly.R')
h <- plot_ly(data = diamonds,type = "box",boxpoints = "all", jitter = 0.1, pointpos = 0, x = price, y = cut,color = cut,orientation ='h' )
add_trace(x = rep(20000,length(seq(0,1,by=0.3))), y = seq(from = 0, to = 1, by = 0.3), mode = "lines", yaxis = "y2", marker = list(color = "red"),line = list(width = "1px"))
layout(yaxis2 = list(overlaying = "y",range = c(0, 1),side = "right",showticklabels = F))
packageversion("plotly")
packageVersion("plotly")
source('~/Dingchao/Courses/R/R Programming/Assignments/AcadiaDOE/test.R')
source('~/Dingchao/Courses/R/R Programming/Assignments/AcadiaDOE/test.R')
source('~/Dingchao/Courses/R/R Programming/Assignments/AcadiaDOE/test2.R')
data2$SEID = as.numeric(data2$SEID)
data3 <- subset(data2,data2$SEID == SEID[i])
pd <- position_dodge(.1)
ggplot(data3, aes(x=Test_No, y=Mean, colour=System_Error,group = System_Error)) +
geom_point(aes(shape = System_Error))+
geom_errorbar(aes(ymin=Mean-1*Std, ymax=Mean+1*Std), width=.1, position=pd) +
ylim(-20,2000) +
labs(title="Mean +/- 1 Standard Deviation Plot of All SEIDs") +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=9))
i = 5
SEID[i]
data3 <- subset(data2,data2$SEID == SEID[i])
data4 <- subset(data2,data2$SEID == SEID[i])
data4 <- data2[data2$SEID == SEID[i],]
for (i in 1:length(SEID)) {
### Subset the data of the current SEID
data3 <- data2[data2$SEID == SEID[i],]
title = paste0("MeanMaxMin range plot of System Error", data3$System_Error[[1]])
ths = Threshold[i]
if (USL[i] > 0){
label = paste0("USL = ",ths)
} else {
label =  paste0("LSL = ",ths)}
pd <- position_dodge(.1)
ggplot(data3, aes(x=Test_No, y=Mean)) +
geom_point(aes(y= Mean,shape = System_Error))+
geom_pointrange(aes(ymin=Min, ymax=Max), position=pd) +
geom_hline(yintercept = ths,color = "green",linetype = "longdash") +
geom_text(aes(8,ths,label = label, vjust = -1)) +
labs(title=title) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=9))
PpkImage = paste0("AcadiaDOE/Rexport2/","System Error ",data3$System_Error[[1]],"_MeanMaxMinrange.pdf")
ggsave(PpkImage)
}
## Ppk Individual Plot
for (i in 1:length(SEID)) {
### Subset the data of the current SEID
data3 <- data2[data2$SEID == SEID[i],]
# Ppk Individual Plot
title = paste0("Ppk plot of SEID",data3$SEID[1])
ggplot(data3, aes(x=Test_No, y=Ppk)) + geom_point(aes(y= Ppk)) +
labs(title= title) + geom_hline(yintercept = 1.5,color = "green",linetype = "longdash") +
geom_text(aes(5,1.5,label = "Ppk 1.5", vjust = -1)) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=9))
PpkImage = paste0("AcadiaDOE/Rexport2/","SEID",data3$SEID[1],"_Ppk.pdf")
ggsave(PpkImage)
## Standard Deviation Individual Plot
title = paste0("Standard Deviation plot of SEID",data3$SEID[1])
ggplot(data3, aes(x=Test_No, y=Std)) + geom_point(aes(y= Std)) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=9)) + labs(title= title)
PpkImage = paste0("AcadiaDOE/Rexport2/","SEID",data3$SEID[1],"_Std.pdf")
ggsave(PpkImage)
## Plot the variance individual plot
title = paste0("Variance plot of SEID",data3$SEID[1])
ths = Threshold[i]
if (USL[i] > 0){
label = paste0("USL = ",ths)
} else {
label =  paste0("LSL = ",ths)}
pd <- position_dodge(.1)
ggplot(data3, aes(x=Test_No, y=Mean)) +
geom_point(aes(y= Mean,shape = System_Error))+
geom_errorbar(aes(ymin=Mean-3*Std, ymax=Mean+3*Std),position=pd) +
geom_hline(yintercept = ths,color = "green",linetype = "longdash") +
geom_text(aes(8,ths,label = label, vjust = -1)) +
labs(title=title) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=9))
PpkImage = paste0("AcadiaDOE/Rexport2/","SEID",data3$SEID[1],"_Variance.pdf")
ggsave(PpkImage)
## Plot the meanmaxmin range individual plot
title = paste0("MeanMaxMin range plot of SEID",data3$SEID[1])
ths = Threshold[i]
if (USL[i] > 0){
label = paste0("USL = ",ths)
} else {
label =  paste0("LSL = ",ths)}
pd <- position_dodge(.1)
ggplot(data3, aes(x=Test_No, y=Mean)) +
geom_point(aes(y= Mean,shape = System_Error))+
geom_pointrange(aes(ymin=Min, ymax=Max),position=pd) +
geom_hline(yintercept = ths,color = "green",linetype = "longdash") +
geom_text(aes(8,ths,label = label, vjust = -1)) +
labs(title=title) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=9))
PpkImage = paste0("AcadiaDOE/Rexport2/","SEID",data3$SEID[1],"_MeanMaxMinrange.pdf")
ggsave(PpkImage)
}
source('~/Dingchao/Courses/R/R Programming/Assignments/AcadiaDOE/test.R')
source('~/Dingchao/Courses/R/R Programming/Assignments/AcadiaDOE/test.R')
source('~/Dingchao/Courses/R/R Programming/Assignments/AcadiaDOE/test.R')
# Ppk Individual Plot
title = paste0("Ppk plot of SEID",data3$SEID[1])
ggplot(data3, aes(x=Test_No, y=Ppk)) + geom_point(aes(y= Ppk)) +
labs(title= title) + geom_hline(yintercept = 1.5,color = "green",linetype = "longdash") +
geom_text(aes(5,1.5,label = "Ppk 1.5", vjust = -1)) +
theme(axis.text.x  = element_text(angle=90, vjust=0.5, size=9))
PpkImage = paste0("AcadiaDOE/Rexport2/","SEID",data3$SEID[1],"_Ppk.pdf")
PpkImage = paste0("AcadiaDOE/Rexport2/","SEID",data3$SEID[1],"_Ppk.pdf",width = 8.5,height = 11, units = "in")
PpkImage = paste0("AcadiaDOE/Rexport2/","SEID",data3$SEID[1],"_haha.pdf",width = 8.5,height = 11, units = "in")
ggsave(PpkImage)
PpkImage = paste0("AcadiaDOE/Rexport2/","SEID",data3$SEID[1],"_Ppk.pdf")
ggsave(PpkImage,width = 8.5,height = 11, units = "in")
PpkImage = paste0("AcadiaDOE/Rexport2/","SEID",data3$SEID[1],"_Ppk.pdf")
ggsave(PpkImage,width = 11,height = 8.5, units = "in")
PpkImage = paste0("AcadiaDOE/Rexport2/","SEID",data3$SEID[1],"_Ppk.pdf")
ggsave(PpkImage,width = 11,height = 8.5, units = "in")
source('~/Dingchao/Courses/R/R Programming/Assignments/AcadiaDOE/test.R')
source('~/Dingchao/Courses/R/R Programming/Assignments/AcadiaDOE/test2.R')
source('~/Dingchao/Courses/R/R Programming/Assignments/AcadiaDOE/test2.R')
source('~/Dingchao/Courses/R/R Programming/Assignments/AcadiaDOE/test2.R')
source('~/Dingchao/Courses/R/R Programming/Assignments/AcadiaDOE/test2.R')
